// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingTask.WebApp.Data;

#nullable disable

namespace TrainingTask.WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "7666 Smitham Landing, Suite 918, 50682-8733, Reingerberg, Washington, United States",
                            Name = "Abby",
                            Phone = "+1 202-918-2132"
                        },
                        new
                        {
                            Id = 2,
                            Address = "049 Steuber Pines, Suite 946, 22779, Gislasonton, Rhode Island, United States",
                            Name = "Abeni",
                            Phone = "+1 505-646-7697"
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Samsung",
                            Notes = "Samsung specializes in the production of a wide variety of consumer and industry electronics, including appliances, digital media devices, semiconductors, memory chips, and integrated systems. It has become one of the most-recognizable names in technology and produces about a fifth of South Koreas total exports."
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nvidia",
                            Notes = "Nvidia Corporation is a technology company known for designing and manufacturing graphics processing units (GPUs). The company was founded in 1993 by Jen-Hsun Jensen Huang, Curtis Priem and Chris Malachowsky and is headquartered in Santa Clara, Calif."
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("Discount")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("PaidUp")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ItemId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Invoices", t =>
                        {
                            t.HasCheckConstraint("CK_Invoice_SomConstraintsOnColumns", "Quantity >= 0 and Discount >= 0 and PaidUp >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Date = new DateTime(2020, 6, 28, 12, 30, 21, 90, DateTimeKind.Local).AddTicks(9630),
                            Discount = 3m,
                            ItemId = 1,
                            Number = "3657710996",
                            PaidUp = 100m,
                            Price = 300m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Date = new DateTime(2022, 6, 28, 12, 30, 21, 90, DateTimeKind.Local).AddTicks(9715),
                            Discount = 8m,
                            ItemId = 2,
                            Number = "2196613588",
                            PaidUp = 200m,
                            Price = 600m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1,
                            Date = new DateTime(2025, 6, 28, 12, 30, 21, 90, DateTimeKind.Local).AddTicks(9721),
                            Discount = 13m,
                            ItemId = 2,
                            Number = "2511516670",
                            PaidUp = 50m,
                            Price = 600m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BuyingPrice")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<decimal>("SellingPrice")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Items", t =>
                        {
                            t.HasCheckConstraint("CK_Items_SellingBuyingPrice", "SellingPrice >= BuyingPrice and SellingPrice >= 0 and BuyingPrice >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyingPrice = 150m,
                            Name = "A51",
                            Notes = "Samsung Galaxy A51 is an Android smartphone manufactured by Samsung Electronics as part of its Galaxy A series. It was announced and released in December 2019. The phone has a Super AMOLED FHD+ 6.5 in display, a 48 MP wide, 12 MP ultrawide, 5 MP depth, and 5 MP macro camera, a 4000 mAh battery, and an optical in-screen fingerprint sensor.",
                            SellingPrice = 300m,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuyingPrice = 350m,
                            Name = "RTX 40 Series",
                            Notes = "NVIDIA® GeForce RTX™ 40 Series GPUs are beyond fast for gamers and creators. They're powered by the ultra-efficient NVIDIA Ada Lovelace architecture which delivers a quantum leap in both performance and AI-powered graphics. Experience lifelike virtual worlds with ray tracing and ultra-high FPS gaming with the lowest latency. Discover revolutionary new ways to create and unprecedented workflow acceleration.",
                            SellingPrice = 600m,
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Name = "smart phone",
                            Notes = ""
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            Name = "Graphics Card",
                            Notes = ""
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pitch",
                            Notes = "unit of typeface equal to number of characters per inch"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vara",
                            Notes = "unit of linear measure of between 33 and 43 inches"
                        });
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Invoice", b =>
                {
                    b.HasOne("TrainingTask.WebApp.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainingTask.WebApp.Entities.Item", "Item")
                        .WithMany("Invoices")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Item", b =>
                {
                    b.HasOne("TrainingTask.WebApp.Entities.Type", "Type")
                        .WithMany("Items")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Type", b =>
                {
                    b.HasOne("TrainingTask.WebApp.Entities.Company", "Company")
                        .WithMany("Types")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Client", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Company", b =>
                {
                    b.Navigation("Types");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Item", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("TrainingTask.WebApp.Entities.Type", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
